/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 lungs.glb --types 
Author: E-learning UMCG (https://sketchfab.com/eLearningUMCG)
License: CC-BY-NC-SA-4.0 (http://creativecommons.org/licenses/by-nc-sa/4.0/)
Source: https://sketchfab.com/3d-models/healthy-heart-and-lungs-5c62cd4d4ba04243be1062d2263d3ef0
Title: Healthy heart and lungs
*/

import * as THREE from 'three'
import { Gltf, useGLTF } from '@react-three/drei'
import type { GLTF } from 'three-stdlib'
import type { ModelProps } from './Brain'
import { useEffect, useRef } from 'react'
type GLTFResult = GLTF & {
  nodes: {
    normaal25_normaal25_0: THREE.Mesh
    normaal6_normaal6_0: THREE.Mesh
    normaal6_normaal6_0_1: THREE.Mesh
    normaal6_normaal6_0_2: THREE.Mesh
    normaal5_normaal5_0: THREE.Mesh
    normaal4_normaal4_0: THREE.Mesh
    linkerlong3_linkerlong3_0: THREE.Mesh
  }
  materials: {
    normaal25: THREE.MeshStandardMaterial
    normaal6: THREE.MeshStandardMaterial
    normaal5: THREE.MeshStandardMaterial
    normaal4: THREE.MeshStandardMaterial
    linkerlong3: THREE.MeshStandardMaterial
  }
  // animations: GLTFAction[]
}

export function Lungs(props: ModelProps) {
  const { nodes, materials } = useGLTF('/lungs.glb') as unknown as GLTFResult
  const groupRef = useRef<THREE.Group>(null);
  useEffect(() => {
    const box = new THREE.Box3().setFromObject(groupRef.current!);
    const center = box.getCenter(new THREE.Vector3());
    box.getCenter(center);
    groupRef.current!.position.sub(center);
  }, []);


  return (
    <group ref={groupRef} {...props} dispose={null}>
      <group position={[-2.066, -26.478, 49.443]} rotation={[-2.848, 0.013, 0.042]} scale={0.007}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.normaal25_normaal25_0.geometry}
            material={materials.normaal25}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.normaal6_normaal6_0.geometry}
            material={materials.normaal6}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.normaal6_normaal6_0_1.geometry}
            material={materials.normaal6}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.normaal6_normaal6_0_2.geometry}
            material={materials.normaal6}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.normaal5_normaal5_0.geometry}
            material={materials.normaal5}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.normaal4_normaal4_0.geometry}
            material={materials.normaal4}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.linkerlong3_linkerlong3_0.geometry}
            material={materials.linkerlong3}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/lungs.glb')
