/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 stomach.glb --types 
Author: Liz Paton (https://sketchfab.com/elizabethpaton)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/oesophageal-stomach-disease-fa692a82f72349a08d3667e94aa9e702
Title: Oesophageal & Stomach Disease
*/

import { Mesh, MeshStandardMaterial, Vector3, Box3, Group } from 'three'
import { useGLTF } from '@react-three/drei'
import type { GLTF } from 'three-stdlib'
import { getMaterial, type ModelProps } from './Brain'
import { useEffect, useRef, useState } from 'react'

type GLTFResult = GLTF & {
  nodes: {
    Object_3: Mesh
    Object_4: Mesh
    Object_5: Mesh
    Object_6: Mesh
    Object_7: Mesh
    Object_8: Mesh
    Object_9: Mesh
    Object_10: Mesh
    Object_11: Mesh
    Object_12: Mesh
    Object_13: Mesh
    Object_14: Mesh
    Object_15: Mesh
    Object_16: Mesh
    Object_17: Mesh
    Object_18: Mesh
    Object_19: Mesh
    Object_20: Mesh
    Object_21: Mesh
    Object_22: Mesh
    Object_23: Mesh
    Object_24: Mesh
    Object_25: Mesh
    Object_26: Mesh
    Object_27: Mesh
    Object_28: Mesh
    Object_29: Mesh
    Object_30: Mesh
    Object_31: Mesh
    Object_32: Mesh
    Object_33: Mesh
    Object_34: Mesh
    Object_35: Mesh
    Object_36: Mesh
    Object_37: Mesh
    Object_38: Mesh
    Object_39: Mesh
    Object_40: Mesh
    Object_41: Mesh
    Object_42: Mesh
    Object_44: Mesh
    Object_45: Mesh
    Object_46: Mesh
    Object_47: Mesh
    Object_48: Mesh
    Object_49: Mesh
    Object_50: Mesh
    Object_51: Mesh
    Object_52: Mesh
    Object_53: Mesh
    Object_54: Mesh
    Object_55: Mesh
    Object_56: Mesh
    Object_57: Mesh
    Object_58: Mesh
    Object_59: Mesh
    Object_60: Mesh
    // Object_61: Mesh
    Object_62: Mesh
    Object_63: Mesh
    Object_64: Mesh
  }
  materials: {
    material_0: MeshStandardMaterial
    defaultMat: MeshStandardMaterial
  }
  // animations: GLTFAction[]
}


export function Stomach(props: ModelProps) {
  const { nodes, materials } = useGLTF('/stomach.glb') as unknown as GLTFResult
  const { setIsSelected, info, ...groupProps } = props;
  const meshKeys = Object.keys(nodes).slice(4).filter(key => key !== "sketchfab-dataprocessing1e13c4e3ca9e4617ab6b547bb2e60cc5preprocessSubTool-0-11412273OBJ"
  ) // All mesh keys from GLTF
  const groupRef = useRef<Group>(null);
  const initialState = meshKeys.reduce((acc, key) => {
    acc[key] = false
    return acc
  }, {} as Record<string, boolean>)
  const [hovered, setHovered] = useState(initialState);
  //  if maaterialsKeys greater than meshKeys Object.keys >= 44 value must defaultMat or if materialsKeys < meshKeys Object.keys < 44 value must be material_0
  useEffect(() => {
    const box = new Box3().setFromObject(groupRef.current!);
    const center = box.getCenter(new Vector3());
    box.getCenter(center);
    groupRef.current!.position.sub(center);
  }, []);

  const handlePointerOver = (key: string) => {
    console.log("hovered", key)
    setHovered((prev => ({ ...prev, [key]: true })));
    props.setIsSelected?.(key);
  }
  const handlePointerOut = (key: string) => {
    setHovered((prev => ({ ...prev, [key]: false })));
    props.setIsSelected?.(null);
  }
  const handleClick = (key: string) => {
    props.setIsSelected?.(key);
  }
  return (
    <group ref={groupRef} {...groupProps} dispose={null}>
      <group position={[-0.575, 1.046, 0.162]} rotation={[-1.877, 0.458, -0.031]} scale={0.297}>
        {meshKeys.map((key) => (
          <mesh
            key={key}
            geometry={nodes[key as keyof typeof nodes].geometry}
            material={getMaterial(hovered[key], materials[key as keyof typeof materials] || materials.defaultMat)}
            onPointerOver={(e) => { e.stopPropagation(); handlePointerOver(key) }}
            onPointerOut={(e) => { { e.stopPropagation(); handlePointerOut(key) } }}
            onClick={(e) => { e.stopPropagation(); handleClick(key) }}
          />
        ))}
      </group>
    </group>

  )
}

useGLTF.preload('/stomach.glb')


//  <group {...props} dispose={null}>
//       <group position={[-0.575, 1.046, 0.162]} rotation={[-1.877, 0.458, -0.031]} scale={0.297}>
//         <mesh geometry={nodes.Object_3.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_4.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_5.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_6.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_7.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_8.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_9.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_10.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_11.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_12.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_13.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_14.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_15.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_16.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_17.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_18.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_19.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_20.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_21.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_22.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_23.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_24.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_25.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_26.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_27.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_28.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_29.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_30.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_31.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_32.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_33.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_34.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_35.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_36.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_37.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_38.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_39.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_40.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_41.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_42.geometry} material={materials.material_0} />
//         <mesh geometry={nodes.Object_44.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_45.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_46.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_47.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_48.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_49.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_50.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_51.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_52.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_53.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_54.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_55.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_56.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_57.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_58.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_59.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_60.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_61.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_62.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_63.geometry} material={materials.defaultMat} />
//         <mesh geometry={nodes.Object_64.geometry} material={materials.defaultMat} />
//       </group>
//     </group>